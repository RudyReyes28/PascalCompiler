/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.rudyreyes.pascalcompiler.vista.principal;

import com.rudyreyes.pascalcompiler.modelo.simbolo.EntornoSimbolos;
import com.rudyreyes.pascalcompiler.modelo.simbolo.Simbolo;
import com.rudyreyes.pascalcompiler.modelo.simbolo.Tipo;
import com.rudyreyes.pascalcompiler.modelo.simbolo.TipoDato;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rudyo
 */
public class VentanaReportes extends javax.swing.JDialog {
    List<Tipo> listaTipos;
    List<EntornoSimbolos> listaSimbolos;
    String insAST;
    /**
     * Creates new form VentanaReportes
     */
    public VentanaReportes(java.awt.Frame parent, boolean modal, List<Tipo> listaTipos, List<EntornoSimbolos> listaSimbolos, String ast) {
        super(parent, modal);
        this.listaTipos = listaTipos;
        this.listaSimbolos = listaSimbolos;
        this.insAST = ast;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSimbolos = new javax.swing.JButton();
        btnTipos = new javax.swing.JButton();
        btnActivacion = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReportes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 255, 204));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Reportes");

        btnSimbolos.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnSimbolos.setText("Tabla de Simbolos");
        btnSimbolos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimbolosActionPerformed(evt);
            }
        });

        btnTipos.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnTipos.setText("Tabla de Tipos");
        btnTipos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTiposActionPerformed(evt);
            }
        });

        btnActivacion.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        btnActivacion.setText("Arbol de Activaciones");

        jScrollPane1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N

        tablaReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaReportes);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnActivacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnTipos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSimbolos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSimbolos)
                        .addGap(67, 67, 67)
                        .addComponent(btnTipos)
                        .addGap(66, 66, 66)
                        .addComponent(btnActivacion))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimbolosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimbolosActionPerformed
        // TODO add your handling code here:
         String[] columnas = {"#","Nombre", "Categoria","Tipo de Dato", "Tipo Base", "Entorno" ,"Valor", "LÃ­nea", "Columna"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        
        tablaReportes.setModel(modelo);

        int contador = 1;

        for (EntornoSimbolos entornoSimbolos : listaSimbolos) {
            //System.out.println("Entorno: " + entornoSimbolos.getNombreEntorno());
            if (!entornoSimbolos.getSimbolos().isEmpty()) {

                Collections.sort(entornoSimbolos.getSimbolos(), new Comparator<Simbolo>() {
                    @Override
                    public int compare(Simbolo s1, Simbolo s2) {
                        return Integer.compare(s1.getLinea(), s2.getLinea());
                    }
                });
                for (Simbolo simbolo : entornoSimbolos.getSimbolos()) {
                    //System.out.println(simbolo.imprimirSimbolo());

                    
                    modelo.addRow(new Object[]{
                        contador,
                        simbolo.getId(),
                        simbolo.isMutable() ? "variable" : "constante",
                        simbolo.getTipo().getNombreEstructura(),
                        simbolo.getTipo().getTipo(),
                        entornoSimbolos.getNombreEntorno(),
                        this.obtenerValor(simbolo.getValor(),simbolo.getTipo().getTipo()),
                        simbolo.getLinea(),
                        simbolo.getColumna()
                    });

                    contador++;
                }

            }
        }
    }//GEN-LAST:event_btnSimbolosActionPerformed

    private void btnTiposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTiposActionPerformed
        // TODO add your handling code here:
         String[] columnas = {"#","Nombre", "Tipo Base","Dimension", "Minimo", "Maximo", "Tipo estructura"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, 0);
        
        tablaReportes.setModel(modelo);

        int contador = 1;

        for (Tipo tipoD : listaTipos) {
            //System.out.println("Entorno: " + entornoSimbolos.getNombreEntorno());
            

                
                    //System.out.println(simbolo.imprimirSimbolo());

                    
                    modelo.addRow(new Object[]{
                        contador,
                        tipoD.getNombre(),
                        tipoD.getTipo(),
                        (tipoD.getDimension() == 0) ? "1" : tipoD.getDimension(),
                        tipoD.getMinimo(),
                        tipoD.getMaximo(),
                        tipoD.getNombreEstructura()
                    });

                    contador++;
                }
        
        
    }//GEN-LAST:event_btnTiposActionPerformed

    private String obtenerValor(Object valor, TipoDato tipo){
        if(valor instanceof Object[]){
            Object [] resultado = (Object []) valor;
            String vector = "[";
            for(int i=0; i<resultado.length; i++){
                vector += resultado[(int)i] + ", ";
            }
            return vector+= "]"; 
        
        }else if(valor instanceof List && tipo==TipoDato.VOID){
            LinkedList<HashMap> acceso = (LinkedList<HashMap>) valor;
            String struct = "{";
            
            for(int i =0; i< acceso.size(); i++){
                String nombreC =(String) acceso.get(i).get("id");
                    var valorC =  acceso.get(i).get("valor");
                        struct += nombreC + ":"+valorC +",";
                
                    
            }
            return struct += "}";
        
        }
        
        return valor.toString();
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActivacion;
    private javax.swing.JButton btnSimbolos;
    private javax.swing.JButton btnTipos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaReportes;
    // End of variables declaration//GEN-END:variables
}
